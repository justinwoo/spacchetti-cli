sudo: required

language: generic

cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack
  - $TRAVIS_BUILD_DIR/.stack-work

services:
  - docker

matrix:
  include:
  # Build on Linux with docker
  - env: BUILD=stack ARGS=""
    compiler: ": #stack default"

  # Build on macOS natively
  - env: BUILD=stack ARGS=""
    compiler: ": #stack default osx"
    os: osx


before_install:
  # Using compiler above sets CC to an invalid value, so unset it
  - unset CC
  # We want to always allow newer versions of packages when building on GHC HEAD
  - CABALARGS=""
  - if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi

  - |
    echo "Running before_install"
    if [ `uname` = "Darwin" ]
    then
      # Download and unpack the stack executable
      export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH
      mkdir -p ~/.local/bin

      travis_retry curl --insecure -L https://get.haskellstack.org/stable/osx-x86_64.tar.gz | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin

      # Use the more reliable S3 mirror of Hackage
      mkdir -p $HOME/.cabal
      echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' > $HOME/.cabal/config
      echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config
    
    else
      docker pull nilrecurring/haskell-lavello:lts-12
      docker run --mount src="$(pwd)",target=/home/ubuntu/spago,type=bind nilrecurring/haskell-lavello:lts-12 /bin/bash -c "sudo chown -R ubuntu spago; cd spago; stack build"
    
    fi


install:
  - |
    echo "Running install"
    if [ `uname` = "Darwin" ]
    then

      echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
      if [ -f configure.ac ]; then autoreconf -i; fi

      set -ex
      stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies
      set +ex
    
    else

      echo "Skipping install on Linux"

    fi


script:
  - |
    echo "Running tests"
    if [ `uname` = "Darwin" ]
    then
      stack build --copy-bins --local-bin-path ./artifacts;
      nvm install 10 && nvm use 10
    else
      docker run --mount src="$(pwd)",target=/home/ubuntu/spago,type=bind nilrecurring/haskell-lavello:lts-12 /bin/bash -c "cd spago; stack build --copy-bins --local-bin-path ./artifacts"
    fi
  - export PATH="${PATH}:$(pwd)/artifacts"
  - npm install -g purescript@0.12.5
  - cd test/spago-test/ && python3 ../spago-test.py && cd ../../
  - npm install -g psc-package@3.0.1
  - cd test/psc-package-local-test/ && python3 ../psc-package-test.py && cd ../../


before_deploy:
  - |
    echo "Running before_deploy"

    # We have to check on this condition so we run the before_deploy job only once
    if ! [ "$BEFORE_DEPLOY_RUN" ]; then
      export BEFORE_DEPLOY_RUN=1;

      if [ `uname` = "Darwin" ]
      then
        stack build --copy-bins --local-bin-path ./artifacts;
        sed -e "s/NPM_VERSION/$(./scripts/get-npm-version)/g" -i "" npm/package.json ;
        sed -e "s/PACKAGE_VERSION/$(./scripts/get-version)/g" -i "" npm/install.js ;
      else
        docker run --mount src="$(pwd)",target=/home/ubuntu/spago,type=bind nilrecurring/haskell-lavello:lts-12 /bin/bash -c "cd spago; stack build --copy-bins --local-bin-path ./artifacts"
        sed -e "s/NPM_VERSION/$(./scripts/get-npm-version)/g" -i npm/package.json ;
        sed -e "s/PACKAGE_VERSION/$(./scripts/get-version)/g" -i npm/install.js ;
      fi
      cp artifacts/spago spago
      tar -zcvf "${TRAVIS_OS_NAME}.tar.gz" spago

      ## Get ready to publish npm
      cd npm
      cp ../LICENSE ./LICENSE
    fi

deploy:
  - provider: releases
    api_key: $API_KEY
    file:
      - ../$TRAVIS_OS_NAME.tar.gz
    skip_cleanup: true
    on:
      tags: true
    script:
      - echo 'done'
  - provider: npm
    email: "$NPM_EMAIL"
    api_key: "$NPM_TOKEN"
    skip_cleanup: true
    on:
      condition: $TRAVIS_OS_NAME = osx
      tags: true
    script:
      - echo 'done'
